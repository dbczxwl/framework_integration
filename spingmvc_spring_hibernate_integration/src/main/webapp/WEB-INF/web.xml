<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"	id="WebApp_ID" version="4.0">

	<display-name>spingmvc_single</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>/WEB-INF/pages/index.jsp</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.jsp</welcome-file>
		<welcome-file>default.htm</welcome-file>
	</welcome-file-list>

	<!-- 1. 配置Servlet类 -->
	<!-- context-param为全局参数 -->
	<context-param>
		<!-- 如果context-param未配置contextConfigLocation, 则默认取/WEB-INF/applicationContext.xml -->
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- 2. 配置Servlet类 -->
	<listener>
		<!-- 父容器需要先于子容器加载 -->
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 3. 配置Servlet类 -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- init-param为局部参数 -->
		<init-param>
			<!-- 如果DispatcherServlet未配置contextConfigLocation, 默认读取/WEB-INF/${dispatcherServletName}-servlet.xml -->
			<param-name>contextConfigLocation</param-name>
			<!-- classpath = /WEB-INF/classes,存放编译后的class文件和资源文件夹中的内容副本 -->
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>

		<!-- 在服务器启动时加载通过配置文件找到的been -->
		<load-on-startup>1</load-on-startup>

	</servlet>

	<!-- 4. 设置Servlet拦截路径 -->
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<!-- 处理全部请求 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>